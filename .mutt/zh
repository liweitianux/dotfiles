#
# mutt zh settings
#

## Ref: http://forum.ubuntu.org.cn/viewtopic.php?f=73&t=322014
#set send_charset="us-ascii:iso-8859-1:gb2312:utf-8"
set send_charset="gb2312"
set assumed_charset="utf-8:gb2312:gb18030:gbk"
set locale="zh_CN.UTF-8"
charset-hook ^us-ascii$ GB2312
charset-hook !UTF-8 GB2312
auto_view text/html
set rfc2047_parameters=yes

## Ref: http://leeon.me/a/mutt-muttrc-chinese-configuration-note
#当 Mutt 用 thread 方式显示时，是否用纯 ascii 表示树状列表。
set ascii_chars=yes
#回信的引文之前插入那个符号？
set indent_str="> "
#打分
#新信件+4分,主题包含“通知”的+2，主题包含 “Circulation” +3, 已经标记删除的 -5，上次没有读的 +1，包含 “believe”的 -10(垃圾广告！)。
score "~N" +4
score "~s 通知" +2
score "~s Circulation" +3
score "~D" -5
score "~O" +1
score "~s believe" -10
#排序方式。
set sort=score
#当用 thread 排序方式时，我们对各个 thread 的相对排序顺序。
set sort_aux=date
#你的终端支持哪一种编码的显示？这个必须和你的终端编码一样。推荐用utf8
set charset="utf8"
#send_charset
#set send_charset="us-ascii:iso-8859-1:gb2312:utf-8"
set send_charset="us-ascii:iso-8859-1:gb2312:utf-8"
#外部程序退出时，是否要求用户按一个键才返回。这在察看某些shell命令输出时是比要的，
#否则它们一下就消失了。
set wait_key=yes
#mutt显示日期为中文
set locale="zh_CN"
#有些没有设置字符编码时
charset-hook ^us-ascii$ gb2312
#Chinaren 等服务器发出来的信件使用了 quoted-printable 的 subject，
#而且设置编码为 "iso8859-1"，这显然是错误的。
#对付这个错误的办法是把 iso-8859-1 变成 gb2312 的别名
charset-hook ^iso-8859-1$ gb2312
# evolution 发过来的 subject 为 utf-8 编码的邮件标题乱码！
#那就把不是 utf-8 的编码都映射到 gb2312
charset-hook !utf-8 gb2312
charset-hook .* gb2312


# vim: filetype=muttrc
